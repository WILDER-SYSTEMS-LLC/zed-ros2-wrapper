ARG L4T_VERSION=l4t-r36.2.0
ARG IMAGE_NAME=dustynv/ros:humble-ros-base-${L4T_VERSION}

FROM ${IMAGE_NAME}

ARG ZED_SDK_MAJOR=4
ARG ZED_SDK_MINOR=1
ARG ZED_SDK_PATCH=0
ARG L4T_MAJOR=36
ARG L4T_MINOR=2

ENV DEBIAN_FRONTEND=noninteractive

########### ZED ###########

# Install Dependencies for the SDK installation
RUN apt update && apt install -y --no-install-recommends \
    zstd

# ZED SDK link
ENV ZED_SDK_URL="https://stereolabs.sfo2.cdn.digitaloceanspaces.com/zedsdk/${ZED_SDK_MAJOR}.${ZED_SDK_MINOR}/ZED_SDK_Tegra_L4T${L4T_MAJOR}.${L4T_MINOR}_v${ZED_SDK_MAJOR}.${ZED_SDK_MINOR}.${ZED_SDK_PATCH}.zstd.run"

# Check that this SDK exists
RUN echo "SDK link: $ZED_SDK_URL"
RUN if [ "$(curl -I "${ZED_SDK_URL}" -o /dev/null -s -w '%{http_code}\n' | head -n 1)" = "200" ]; then \
        echo "The URL points to something."; \
    else \
        echo "The URL does not point to a .run file or the file does not exist."; \
        exit 1; \
    fi

# Install the ZED SDK
RUN echo "# R${L4T_MAJOR} (release), REVISION: ${L4T_MINOR}" > /etc/nv_tegra_release

ENV ZED_RUN_FILE="ZED_SDK_Linux_JP.run"
RUN wget -q -O ${ZED_RUN_FILE} ${ZED_SDK_URL} && \
  chmod +x ${ZED_RUN_FILE} && \
 ./${ZED_RUN_FILE} silent skip_tools && \
  rm -rf /usr/local/zed/resources/* && \
  rm -rf ${ZED_RUN_FILE}

# Install extra dependencies.
RUN apt update && apt install -y --no-install-recommends \
    libpq-dev \
    usbutils

RUN pip3 install protobuf

########### COLCON BUILD ZED WRAPPER ###########

# Copy the sources in the Docker image
WORKDIR /root/ros2_ws/
COPY tmp_sources/ ./src/

RUN apt remove -y opencv-dev
#RUN apt -o Dpkg::Options::="--force-overwrite" install -f -y libopencv-dev

# Install ROS dependencies
RUN apt update -y && rosdep update && \
  rosdep install --from-paths src --ignore-src -r -y && \
  rm -rf /var/lib/apt/lists/*

# Install cython (why is this being upgraded?)
RUN python3 -m pip install --upgrade cython

# TODO nmea_msgs package is borked
# Build the dependencies and the ZED ROS2 Wrapper
RUN /bin/sh -c ". /opt/ros/$ROS_DISTRO/share/nmea_msgs/local_setup.sh && . /opt/ros/$ROS_DISTRO/install/setup.sh && \
  colcon build --parallel-workers $(nproc) --symlink-install \
  --event-handlers console_direct+ --base-paths src \
  --cmake-args '-DCMAKE_BUILD_TYPE=Release' \
  '-DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs' \
  '-DCMAKE_CXX_FLAGS=\"-Wl,--allow-shlib-undefined\"'"

# Set the default DDS middleware to FastRTPS for improved big data transmission
ENV RMW_IMPLEMENTATION=rmw_fastrtps_cpp

# Setup environment variables
COPY ros_entrypoint.sh /sbin/ros_entrypoint.sh
ENTRYPOINT ["/sbin/ros_entrypoint.sh"]
CMD ["bash"]
